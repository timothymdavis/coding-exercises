package spike.problems.projecteuler;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the
 * first 10 terms will be:
 * <p/>
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * <p/>
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the
 * even-valued terms.
 */
public class Problem002 {

    /*
     * Chose a non-recursive solution since I didn't want to blow the stack for large numbers.
     */
    public static long sumOfEvenValuedFibonacciTermUpTo(int max) {
        int sum = 0;
        int prevNumber = 1;
        int currNumber = 2;
        while (currNumber < max) {
            if (currNumber % 2 == 0) {
                sum += currNumber;
            }
            int tmp = currNumber;
            currNumber = prevNumber + currNumber;
            prevNumber = tmp;
        }
        return sum;
    }

}
